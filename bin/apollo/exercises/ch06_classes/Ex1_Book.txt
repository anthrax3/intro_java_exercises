Lab Name:  Book

Objectives:
- Learn how to create a class to represent an object
- Add private instance variables in your class
- Add constructors to your class
- Add accessor and modifier methods for your class
- Add a toString() method to your class

Credit:  Thanks to Shyamal Mitra from The University of Texas for the idea upon which this lab is based.

Lab Description:

Today you will learn how to create your own class to represent a book. You will include all the basic components required of a class. This will include private instance variables, constructors, modifier methods, accessor methods, and a toString() method.

Lab Directions:
1) Add comments in your code answering the questions in italic below.
2) Add the class name to the top of Book.java
  a) What should the name of this class be?

3) Declare the instance variables required for this lab. 
  a) We will use two instance variables.
  b) The first variable is a String and called bookName;
  c) The second variable is an int and called bookISBN;
    i) What access do these variables require (private or public)? Why?
    ii) Do you need to assign default values when declaring these variables? Why?

4) Add two constructors to your class.
  a) The first constructor should be a default constructor.
    i) What name did you use for the constructor?
    ii) What should happen inside the default constructor?
    iii) What are good default values for these two variables?
  b) The second constructor should be an initialization constructor.
    i) What should happen inside the initialization constructor?
    ii) Remember to put the instance variables on the left side of the assignment operator, and the values being passed in as parameters on the right side.
    iii) What is the difference in values assigned when you call the different constructors?

5) Add a modifier method for each instance variable. Remember, modifier method names should start with set.
  a) What is the return type for a modifier method?
  b) How many arguments should you pass into each method?
  c) What is the datatype of the argument passed in?

6) Add an accessor method for each instance variable. Remember, modifier method names should start with get.
  a) What is the return type for an accessor method?
  b) How many arguments should be passed into an accessor method?

7) Add a toString() method which returns a summary of the variables.
  a) What is the return type of the toString() method?
  b) What is the purpose of the toString() method?

8) Test your Book class by opening up BookRunner.java. There is a constructor call here to instantiate a new book using the default constructor. There is also a toString() call to print out the details of the book.
  a) Why does the output from the toString() method show no name and 0 (hopefully)?

9) Create a new book using the initialization constructor.
  a) Add a call to the toString() method for the book you created.
    i) Does the output of the toString() method match your provided input?

10) Change the name of the original book created using the default constructor.
  a) What method did you use to change the name? What type of method is this?

11) Call the getName() method after changing the name of the book.
  a) Did anything print in the output screen? Why or why not?
  b) What do you want to keep in mind when calling a return method if you want to see what it returns?
  c) What type of method is getName()?

12) Change the name and ISBN number for both books. Then use the accessor methods to display the updated information.

13) Finally, call the toString() method for both books.
  a) How do you call a toString() method?

